q()
q()
J <- 12
J <- 3
a
b
setwd("D:/F/Programming/Anomaly-Detection/Powergrid/")
setwd("D:/F/Programming/Anomaly-Detection/Powergrid/")
J <- 3
J <- 3
J <- 3
J <- 3
J <- 3
J <- 3
J <- 3
pi <- c(0.1, 0.75, 0.15)
# Set file path
setwd("D:/F/Programming/Anomaly-Detection/Powergrid/")
# Read in data
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test_v1.csv")
# Extract the global_active_power column
Gap.col <- data.frame(X = train$Global_active_power[1:100000])
#Tgap.col <- data.frame(test$Global_active_power[1:20000])
# Replace 0 with NA
Gap.col[is.na(Gap.col)] <- 0
# Change data type
N <- as.numeric(Gap.col$X)
#result <- list(y = Gap.col$X)
class(N) <- "hsmm.data"
# Load package
library(mvtnorm)
library(mhsmm)
# Build hmm with univariant data
# Set state number based on 10000 data in graph
J <- 3
# Set init value pi+
#pi <- rep(1/J, J)
pi <- c(0.1, 0.75, 0.15)
# Build transition matrix A, entry by row
A <- matrix(c(0.8, 0.5, 0.1, 0.05, 0.2, 0.5, 0.15, 0.3, 0.4), nrow = J)
# Build emission matrix
B <- list(mu = c(1.26, 1.86, 2.6), sigma = c(1, 4, 7))
# Build hmm model
model <- hmmspec(init = pi, trans = A, parms.emis = B, dens.emis = dnorm.hsmm, mstep = 10)
model
# EM algorithom fits an HMM to the data
hmm <- hmmfit(N, model, mstep = mstep.norm, maxit = 500)
# Summary
summary(hmm)
#plot(hmm$loglik, type = 'l', ylab = "log-likelihood", xlab = "Iteration")
yhat <- predict(hmm, N)
plot(yhat)
# J <- 3
# init <- c(0,0,1)
# P <- matrix(c(0,.1,.4,.5,0,.6,.5,.9,0),nrow=J)
# B <- list(mu=c(10,15,20),sigma=c(2,1,1.5))
# d <- list(lambda=c(10,30,60),shift=c(10,100,30),type='poisson')
# model <- hsmmspec(init,P,parms.emission=B,sojourn=d,dens.emission=dnorm.hsmm)
# train <- simulate(x, model,r=rnorm.hsmm,nsim=100,seed=123456)
# plot(train,xlim=c(0,400))
#
# predict()
View(train)
setwd("D:/F/Programming/Anomaly-Detection/Powergrid/")
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
install.packages("D:/F/Programming/Anomaly-Detection/Powergrid/mvtnorm/R/mvtnorm", repos = NULL)
install.packages(c("mvtnorm", "mhsmm"))
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
getwd()
setwd(getwd())
setwd(getwd())
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
View(Gap.col)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
source('D:/F/Programming/Anomaly-Detection/hmmtest.R', echo=TRUE)
